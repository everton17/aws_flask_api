name: Deploy Full Stack Application

on:
  workflow_dispatch:

jobs:
#  terraform_deploy:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_CI_CD }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CI_CD }}
#          aws-region: ${{ secrets.RS_REGION }}
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.3.5
#
#      - name: Terraform Init
#        run: |
#          echo "***Running Terraform Init***"
#          terraform init -backend-config="bucket=${{ secrets.RS_BUCKET_NAME }}" -backend-config="region=${{ secrets.RS_REGION }}" -backend-config="key=${{ secrets.RS_KEY_PATH_FILE }}"
#        working-directory: ./terraform   
#
#      - name: Terraform Validate
#        run: |
#          echo "***Running Terraform Validate***"
#          terraform validate
#        working-directory: ./terraform 
#
#      - name: Terraform Plan
#        run: |
#          echo "***Running Terraform Plan***"
#          terraform plan
#        working-directory: ./terraform
#
#      - name: Terraform Apply
#        run: |
#          echo "***Running Terraform Apply***"
#          terraform apply -auto-approve
#        working-directory: ./terraform
        
  build_app:
#    needs: terraform_deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_CI_CD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CI_CD }}
          aws-region: ${{ secrets.RS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.5

      - name: Terraform Init
        run: |
          echo "***Running Terraform Init***"
          terraform init -backend-config="bucket=${{ secrets.RS_BUCKET_NAME }}" -backend-config="region=${{ secrets.RS_REGION }}" -backend-config="key=${{ secrets.RS_KEY_PATH_FILE }}"
        working-directory: ./terraform
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Set Environment Variables
        run: cd ./terraform && echo "ECR_REPOSITORY=$(terraform output ecr_repo_url | tr -d '\"')" >> $GITHUB_ENV
      
#      - name: Print Environment Variable
#        run: |
#          echo "ECR Repository: ${{ env.ECR_REPOSITORY }}"
        
#      - name: Build and Push Docker Image
#        id: build-docker-image
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#           echo "ECR_REPOSITORY=$(terraform output ecr_repo_url)" >> $GITHUB_ENV
#           cd ./terraform
#           echo vamos ler a variavel
#           echo ${{ env.ECR_REPOSITORY }}       
#          cd .. && docker build -t aws_ec2_flask_api . --build-arg ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_APP }} --build-arg SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_APP }}
#          docker tag aws_ec2_flask_api:latest $ECR_REPOSITORY:latest
#          docker push $ECR_REPOSITORY:latest  
      
